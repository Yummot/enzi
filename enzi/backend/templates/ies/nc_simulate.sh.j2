#! /bin/bash -f
set -Euo pipefail

if [ -z ${build_dir+x} ]; then
  mkdir -p ./waves
else
  mkdir -p $build_dir/waves
fi

if [[ $# > 1 ]]; then
  echo -e "ERROR: invalid number of arguments specified\n"
  usage
fi

if [[ ($# == 1 ) && ($1 != "--gui") ]]; then
  echo -e "ERROR: unknown option specified '$1'"
  exit 1
fi

ncsim_opts="+acssce+rwc -messages"
{% if sim_opts %}
ncsim_opts+=" {{ sim_opts }}"
{% endif %}

{% if simulate_log %}
ncsim_opts+=" -logfile {{ simulate_log }}"
{% else %}
ncsim_opts+=" -logfile nc_simulate.log"
{% endif %}

{% if toplevel %}
if [[ ($# == 1 ) && ($1 == "--gui") ]]; then
  ncsim {{ toplevel }} $ncsim_opts -gui
  exit 0
else
  {% if gen_waves %}
  nc_out=$(ncsim {{ toplevel }} $ncsim_opts -input ./nc_waves.tcl 2>&1)
  {% else %}
  nc_out=$(ncsim {{ toplevel }} $ncsim_opts 2>&1)
  {% endif %}
  nc_ecode=$?

  if [[ ($nc_ecode != 0) ]]; then
    if [[ ($nc_out == *"ncsim> exit"*) ]]; then
      printf '%s\n' "$nc_out"
      echo 'enzi exit normally'
    else
      exit $nc_ecode
    fi
  else
    printf '%s\n' "$nc_out"
  fi
fi
{%- endif %}

